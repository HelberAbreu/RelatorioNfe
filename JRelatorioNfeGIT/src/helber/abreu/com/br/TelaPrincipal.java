/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package helber.abreu.com.br;

import helber.abreu.com.br.dto.NfeNotaFiscal;
import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Raiane
 */
public class TelaPrincipal extends javax.swing.JFrame {

    
    public File[] colecaoArquivos;
    public List<String> listaDeNCMIn = new ArrayList<String>(30);
    public List<String> listaDeNCMOut = new ArrayList<String>(30);
    
    
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        setTitle("JRelatorioNfe 1.0.2");
        initComponents();
        barraProgresso.setMinimum(0);
        barraProgresso.setMaximum(100);
        barraProgresso.setBackground(Color.GREEN);
        
        ckmICMS       .setSelected(true);
        ckmPIS        .setSelected(true);
        ckmCOFINS     .setSelected(true);
        ckmVlrTotalNcm.setSelected(true);
        
        ckMCNPJ.setSelected(true);
        ckMNotaFiscal.setSelected(true);
        
        GerenteDeNCM ncm = new GerenteDeNCM();
        try {
            listaDeNCMIn = ncm.obterListaNcm();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro ao obter lista de NCM! Verificar se o arquivo de NCM existe!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
        atualizarJList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barraProgresso = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jsNcm = new javax.swing.JScrollPane();
        listaNcm = new javax.swing.JList();
        btAddNCM = new javax.swing.JButton();
        btRemoverNcm = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listNcmOut = new javax.swing.JList();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        ckMNotaFiscal = new javax.swing.JCheckBoxMenuItem();
        ckMCNPJ = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        ckmICMS = new javax.swing.JCheckBoxMenuItem();
        ckmPIS = new javax.swing.JCheckBoxMenuItem();
        ckmCOFINS = new javax.swing.JCheckBoxMenuItem();
        ckmVlrTotalNcm = new javax.swing.JCheckBoxMenuItem();
        contentsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Selecione os NCM's que serão extraidos das Notas Fiscais:");

        jButton1.setText("Gerar Arquivos... ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "","" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        listaNcm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listaNcm.setModel(new javax.swing.AbstractListModel() {

            public int getSize() { return listaDeNCMIn.size(); }
            public Object getElementAt(int i) { return listaDeNCMIn.get(i); }
        });
        jsNcm.setViewportView(listaNcm);

        btAddNCM.setText(">>");
        btAddNCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddNCMActionPerformed(evt);
            }
        });

        btRemoverNcm.setText("<<");
        btRemoverNcm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverNcmActionPerformed(evt);
            }
        });

        listNcmOut.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listNcmOut.setModel(new javax.swing.AbstractListModel() {

            public int getSize() { return listaDeNCMOut.size(); }
            public Object getElementAt(int i) { return listaDeNCMOut.get(i); }
        }
    );
    jScrollPane4.setViewportView(listNcmOut);

    fileMenu.setMnemonic('f');
    fileMenu.setText("Arquivo");

    openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_MASK));
    openMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inc_abrir.jpg"))); // NOI18N
    openMenuItem.setMnemonic('o');
    openMenuItem.setText("Abrir");
    openMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            openMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(openMenuItem);

    exitMenuItem.setMnemonic('x');
    exitMenuItem.setText("Sair");
    exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitMenuItemActionPerformed(evt);
        }
    });
    fileMenu.add(exitMenuItem);

    menuBar.add(fileMenu);

    helpMenu.setMnemonic('h');
    helpMenu.setText("Configurações");

    editMenu.setMnemonic('e');
    editMenu.setText("Quebra de Arquivo");

    ckMNotaFiscal.setSelected(true);
    ckMNotaFiscal.setText("Nota Fiscal");
    ckMNotaFiscal.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ckMNotaFiscalActionPerformed(evt);
        }
    });
    editMenu.add(ckMNotaFiscal);

    ckMCNPJ.setSelected(true);
    ckMCNPJ.setText("CNPJ");
    editMenu.add(ckMCNPJ);

    helpMenu.add(editMenu);

    jMenu2.setText("Campos do arquivo");

    ckmICMS.setSelected(true);
    ckmICMS.setText("ICMS");
    ckmICMS.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ckmICMSActionPerformed(evt);
        }
    });
    jMenu2.add(ckmICMS);

    ckmPIS.setSelected(true);
    ckmPIS.setText("PIS");
    jMenu2.add(ckmPIS);

    ckmCOFINS.setSelected(true);
    ckmCOFINS.setText("COFINS");
    jMenu2.add(ckmCOFINS);

    ckmVlrTotalNcm.setSelected(true);
    ckmVlrTotalNcm.setText("VALOR TOTAL NCM");
    jMenu2.add(ckmVlrTotalNcm);

    helpMenu.add(jMenu2);

    contentsMenuItem.setMnemonic('c');
    contentsMenuItem.setText("Diretório de Arquivos");
    contentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            contentsMenuItemActionPerformed(evt);
        }
    });
    helpMenu.add(contentsMenuItem);

    menuBar.add(helpMenu);

    setJMenuBar(menuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(39, 39, 39)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(barraProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jButton1))
                .addComponent(jLabel1)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jsNcm, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btRemoverNcm)
                        .addComponent(btAddNCM))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane2)
                    .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jsNcm, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btAddNCM)
                            .addGap(18, 18, 18)
                            .addComponent(btRemoverNcm)
                            .addGap(119, 119, 119)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(barraProgresso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(23, 23, 23))))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed

        JFileChooser chooser = new JFileChooser();  
//        chooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);  
        chooser.setMultiSelectionEnabled(true);

        chooser.setFileFilter(new javax.swing.filechooser.FileFilter(){  
                    @Override
                    public boolean accept(File f){  
                       return (f.getName().endsWith(".xml") || f.getName().endsWith(".XML")) || f.isDirectory();  
                    }  
                    @Override
                    public String getDescription(){  
                        return "*.xml";  
                    }  
                 });  
  
        
        int resultado = chooser.showOpenDialog(null);  
  
        if (resultado == JFileChooser.APPROVE_OPTION) {  

            barraProgresso.setValue(0);
            //INSTANCIA DO SELETOR DE ARQUIVOS  
            File[] arquivo = chooser.getSelectedFiles();//chooser.getSelectedFile();  
                           
            //CAMINHO DO ARQUIVO SELECIONADO  
//          String url = arquivo.getAbsolutePath();  
            //SALVA A IMAGEM SELECIONADA NA VARIAVEL  
            ImageIcon image = new ImageIcon(chooser.getSelectedFile().getPath());  
            //ATRIBUI A IMAGEM AO LABEL  
  
            colecaoArquivos = arquivo;//.listFiles();
            
            nomeArquivo = new String[colecaoArquivos.length];
            int i = 0;
            for (File file : colecaoArquivos) {
              nomeArquivo[i++] = file.getName();   
            }
            
            jList1.setModel(new javax.swing.AbstractListModel() {
                 public int getSize() { return nomeArquivo.length; }
                 public Object getElementAt(int i) { return nomeArquivo[i]; }
            });
        }
        
    }//GEN-LAST:event_openMenuItemActionPerformed

    private String[] nomeArquivo = null;
        
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            
            barraProgresso.setValue(WIDTH);
              
            relatorio.setContemConfins   (ckmCOFINS.isSelected());
            relatorio.setContemIcms      (ckmICMS.isSelected());
            relatorio.setContemPis       (ckmPIS.isSelected());
            relatorio.setContemVlrProduto(ckmVlrTotalNcm.isSelected());
            
            relatorio.setListNcm(listaDeNCMOut);
                    
            relatorio.setEhArqCnpj(ckMCNPJ.isSelected());
            relatorio.setEhArqNotaFiscal(ckMNotaFiscal.isSelected());
            
            if(colecaoArquivos == null || colecaoArquivos.length == 0){
             throw new Exception("Escolha o diretório com as notas fiscais através do menu ABRIR!");
            }
            ArrayList<NfeNotaFiscal> listaNotaFiscal = (ArrayList<NfeNotaFiscal>) configuracaoXML.extrairNotasFiscais(colecaoArquivos);
            
            for (int i = 0; i <= 50; i++) {
              barraProgresso.setValue(i);
            }
            relatorio.gerarRelatorio(listaNotaFiscal);
            
            for (int i = 50; i <= 100; i++) {
              barraProgresso.setValue(i);
            }
            JOptionPane.showMessageDialog(this, "Arquivo(s) gerados no diretório: "+GerenteDiretorios.getDiretorio(),"SUCESSO",1);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage(),"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void contentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contentsMenuItemActionPerformed

        JFileChooser chooser = new JFileChooser();  
        chooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);  
        int resultado = chooser.showOpenDialog(null);  
  
        if (resultado == JFileChooser.APPROVE_OPTION) {  
            try {
                barraProgresso.setValue(0);
                //INSTANCIA DO SELETOR DE ARQUIVOS  
                File arquivo = chooser.getSelectedFile();  
                //CAMINHO DO ARQUIVO SELECIONADO  
                String url = arquivo.getAbsolutePath();  
                //SALVA A IMAGEM SELECIONADA NA VARIAVEL  
                ImageIcon image = new ImageIcon(chooser.getSelectedFile().getPath());  
                //ATRIBUI A IMAGEM AO LABEL  
      
                GerenteDiretorios.atualizarDiretorio(arquivo.getCanonicalPath());
                
                JOptionPane.showMessageDialog(this, "Os arquivos serão gerados em: "+arquivo.getCanonicalPath(),"ATENÇÃO", 2);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao definir novo diretório de geração de arquivos! Motivo: "+ex.getMessage(),"ERRO",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_contentsMenuItemActionPerformed

    private void ckMNotaFiscalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckMNotaFiscalActionPerformed
        barraProgresso.setValue(WIDTH);
    }//GEN-LAST:event_ckMNotaFiscalActionPerformed

    private void ckmICMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckmICMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckmICMSActionPerformed

    private void btAddNCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddNCMActionPerformed
       
        int[] ids = listaNcm.getSelectedIndices();
        for(int i :ids){
            if(i >= 0){
              String ncm = listaDeNCMIn.get(listaNcm.getSelectedIndex());
                
              System.out.println("ncm: "+ncm);
        
              listaDeNCMOut.add(ncm);
        
              listaDeNCMIn.remove(ncm);
                
            } 
         }
        atualizarJList();
    }//GEN-LAST:event_btAddNCMActionPerformed

    private void btRemoverNcmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverNcmActionPerformed
        int[] ids = listNcmOut.getSelectedIndices();
        for(int i :ids){
            if(i >= 0){
              String ncm = listaDeNCMOut.get(listNcmOut.getSelectedIndex());
                
              System.out.println("ncm: "+ncm);
              listaDeNCMIn.add(ncm);
             listaDeNCMOut.remove(ncm);
            }
        }
        atualizarJList();
    }//GEN-LAST:event_btRemoverNcmActionPerformed

    private void atualizarJList(){
        
       listaNcm.setModel(new javax.swing.AbstractListModel() {
             public int getSize() { return listaDeNCMIn.size(); }
             public Object getElementAt(int i) { return listaDeNCMIn.get(i); }
        });
        
        listNcmOut.setModel(new javax.swing.AbstractListModel() {
             public int getSize() { return listaDeNCMOut.size(); }
             public Object getElementAt(int i) { return listaDeNCMOut.get(i); }
        });    
    }
    
    private ConfiguracaoXML configuracaoXML = new ConfiguracaoXML();
    private RelatorioCsv    relatorio       = new RelatorioCsv();
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barraProgresso;
    private javax.swing.JButton btAddNCM;
    private javax.swing.JButton btRemoverNcm;
    private javax.swing.JCheckBoxMenuItem ckMCNPJ;
    private javax.swing.JCheckBoxMenuItem ckMNotaFiscal;
    private javax.swing.JCheckBoxMenuItem ckmCOFINS;
    private javax.swing.JCheckBoxMenuItem ckmICMS;
    private javax.swing.JCheckBoxMenuItem ckmPIS;
    private javax.swing.JCheckBoxMenuItem ckmVlrTotalNcm;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jsNcm;
    private javax.swing.JList listNcmOut;
    private javax.swing.JList listaNcm;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    // End of variables declaration//GEN-END:variables
}
